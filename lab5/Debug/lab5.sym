00000000 R __flash_start
00000000 A __RAM_VECTOR_TABLE_SIZE_BYTES
00000000 A __sram_u_size
00000000 R __VECTOR_RAM
00000000 R __vector_table
00000000 R __VECTOR_TABLE
00000000 A M_VECTOR_RAM_SIZE
000000f8 R __VECTOR_TABLE_END
00000400 R securityInfo
00000450 T _mainCRTStartup
00000450 T _start
000004c4 T Reset_Handler
00000508 T __aeabi_frsub
00000510 T __aeabi_fsub
00000510 T __subsf3
00000514 T __addsf3
00000514 T __aeabi_fadd
00000674 T __aeabi_ui2f
00000674 T __floatunsisf
0000067c T __aeabi_i2f
0000067c T __floatsisf
00000698 T __aeabi_ul2f
00000698 T __floatundisf
000006a8 T __aeabi_l2f
000006a8 T __floatdisf
00000724 T __aeabi_fmul
00000724 T __mulsf3
0000088c T __aeabi_fdiv
0000088c T __divsf3
000009c4 T __gesf2
000009c4 T __gtsf2
000009cc T __lesf2
000009cc T __ltsf2
000009d4 T __cmpsf2
000009d4 T __eqsf2
000009d4 T __nesf2
00000a34 T __aeabi_cfrcmple
00000a3c T __aeabi_cfcmpeq
00000a3c T __aeabi_cfcmple
00000a4c T __aeabi_fcmpeq
00000a60 T __aeabi_fcmplt
00000a74 T __aeabi_fcmple
00000a88 T __aeabi_fcmpge
00000a9c T __aeabi_fcmpgt
00000ab0 T __aeabi_f2iz
00000ab0 T __fixsfsi
00000afc T __aeabi_f2uiz
00000afc T __fixunssfsi
00000b3c T __aeabi_uldivmod
00000b6c T __udivmoddi4
00000e3c W __aeabi_idiv0
00000e3c W __aeabi_ldiv0
00000ecc W USBDM::SimInfo::getUart0Clock()
00000ee0 W USBDM::Uart0Info::enableClock()
00000f08 W USBDM::Uart0Info::getInputClockFrequency()
00000f18 W USBDM::Uart0Info::initPCRs(unsigned long)
00000f44 W USBDM::FormattingSettings::FormattingSettings()
00000f44 W USBDM::FormattingSettings::FormattingSettings()
00000f8c W USBDM::FormattedIO::FormattedIO()
00000f8c W USBDM::FormattedIO::FormattedIO()
00000fc0 W USBDM::FormattedIO::~FormattedIO()
00000fc0 W USBDM::FormattedIO::~FormattedIO()
00000fe0 W USBDM::FormattedIO::~FormattedIO()
00001000 A __heap_size
00001000 A __heap_size__
00001000 A __stack_size
00001000 A __stack_size__
00001000 W USBDM::FormattedIO::writeChar(char)
00001024 W USBDM::FormattedIO::write(char)
00001044 W USBDM::FormattedIO::writeln()
0000105e W USBDM::FormattedIO::write(char const*)
0000108c W USBDM::FormattedIO::writeln(char const*)
000010ae W USBDM::FormattedIO::setEcho(USBDM::EchoMode)
000010cc W USBDM::Uart::_isCharAvailable()
000010f4 W USBDM::Uart::_readChar()
00001136 W USBDM::Uart::_writeChar(char)
0000117c W USBDM::Uart::Uart(UART_Type volatile&)
0000117c W USBDM::Uart::Uart(UART_Type volatile&)
000011a8 W USBDM::Uart::~Uart()
000011a8 W USBDM::Uart::~Uart()
000011cc W USBDM::Uart::~Uart()
000011ec W USBDM::Uart::setBaudRate_brfa(unsigned long, unsigned long)
00001278 W USBDM::Uart::flushOutput()
000012a6 W USBDM::Uart::flushInput()
000012c8 T console_initialise
000012ec T USBDM::log_error(char const*)
00001308 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::Uart_brfa_T(unsigned int)
00001308 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::Uart_brfa_T(unsigned int)
00001338 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::setBaudRate(unsigned int)
0000135c W USBDM::Uart_T<USBDM::Uart0Info>::Uart_T()
0000135c W USBDM::Uart_T<USBDM::Uart0Info>::Uart_T()
0000139c W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
0000139c W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
000013c0 W USBDM::Uart_T<USBDM::Uart0Info>::~Uart_T()
000013e0 W USBDM::Uart_T<USBDM::Uart0Info>::setNvicInterruptPriority(unsigned long)
00001454 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001454 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001478 W USBDM::Uart_brfa_T<USBDM::Uart0Info>::~Uart_brfa_T()
00001498 W USBDM::Uart_T<USBDM::Uart0Info>::clearError()
00001548 W USBDM::Osc0Info::getOscClock()
0000155c W USBDM::Osc0Info::initPCRs(unsigned long)
00001584 W USBDM::RtcInfo::enableClock()
000015ac W USBDM::RtcInfo::getInternalClock()
000015d0 W USBDM::RtcInfo::initPCRs(unsigned long)
000015e4 W USBDM::McgInfo::getErcClock()
00001618 W USBDM::McgInfo::getInternalIrcClock()
0000165c W USBDM::SimInfo::initRegs()
000016cc W USBDM::Mcg::setSysDividers(unsigned long)
000016f0 W USBDM::Mcg::enableNvicInterrupts()
00001700 W USBDM::Mcg::initialise()
0000170c T USBDM::Mcg::clockTransition(USBDM::McgInfo::ClockInfo const&)
00001a0c T USBDM::Mcg::SystemCoreClockUpdate()
00001c68 T USBDM::Mcg::defaultConfigure()
00001c90 T clock_initialise
00001ca4 W USBDM::OscBase_T<USBDM::Osc0Info>::initialise()
00001cb0 W USBDM::RtcBase_T<USBDM::RtcInfo>::initialise()
00001cbc W USBDM::OscBase_T<USBDM::Osc0Info>::defaultConfigure()
00001cd4 W USBDM::RtcBase_T<USBDM::RtcInfo>::defaultConfigure()
00001d90 W USBDM::RtcBase_T<USBDM::RtcInfo>::rtc()
00001da4 W _sbrk
00001df8 W _exit
00001e04 W __cxa_pure_virtual
00001e0e W rtc_initialise
00001e1a W software_init_hook
00001e28 T SystemInitLowLevel
00001e6c T SystemInit
00001e84 W USBDM::PmcBase_T<USBDM::PmcInfo>::releasePins()
00001ea4 W USBDM::FormattedIO::setPadding(USBDM::Padding)
00001ec2 W USBDM::FormattedIO::setWidth(unsigned int)
00001ee0 W USBDM::FormattedIO::ultoa(char*, unsigned long, USBDM::Radix, USBDM::Padding, int, bool)
00002050 W USBDM::FormattedIO::write(unsigned long, USBDM::Radix)
00002092 W USBDM::FormattedIO::writeln(unsigned long, USBDM::Radix)
000020bc W USBDM::FormattedIO::writeln(void const*, USBDM::Radix)
000020e0 W USBDM::FormattedIO::writeln(unsigned int, USBDM::Radix)
00002104 W ADC0_IRQHandler
00002104 W BusFault_Handler
00002104 W CMP0_IRQHandler
00002104 W CMP1_IRQHandler
00002104 W CMT_IRQHandler
00002104 W DebugMon_Handler
00002104 T Default_Handler
00002104 W DMA_Error_IRQHandler
00002104 W DMA0_IRQHandler
00002104 W DMA1_IRQHandler
00002104 W DMA2_IRQHandler
00002104 W DMA3_IRQHandler
00002104 W FTF_Command_IRQHandler
00002104 W FTF_ReadCollision_IRQHandler
00002104 W FTM0_IRQHandler
00002104 W FTM1_IRQHandler
00002104 W I2C0_IRQHandler
00002104 W I2S0_Rx_IRQHandler
00002104 W I2S0_Tx_IRQHandler
00002104 W LLWU_IRQHandler
00002104 W LPTMR0_IRQHandler
00002104 W MCG_IRQHandler
00002104 W MemManage_Handler
00002104 W NMI_Handler
00002104 W PDB0_IRQHandler
00002104 W PendSV_Handler
00002104 W PIT0_IRQHandler
00002104 W PIT1_IRQHandler
00002104 W PIT2_IRQHandler
00002104 W PIT3_IRQHandler
00002104 W PMC_IRQHandler
00002104 W PORTA_IRQHandler
00002104 W PORTB_IRQHandler
00002104 W PORTC_IRQHandler
00002104 W PORTD_IRQHandler
00002104 W PORTE_IRQHandler
00002104 W RTC_Alarm_IRQHandler
00002104 W RTC_Seconds_IRQHandler
00002104 W SPI0_IRQHandler
00002104 W SVC_Handler
00002104 W SWI_IRQHandler
00002104 W SysTick_Handler
00002104 W TSI0_IRQHandler
00002104 W UART0_Error_IRQHandler
00002104 W UART0_Lon_IRQHandler
00002104 W UART0_RxTx_IRQHandler
00002104 W UART1_Error_IRQHandler
00002104 W UART1_RxTx_IRQHandler
00002104 W UART2_Error_IRQHandler
00002104 W UART2_RxTx_IRQHandler
00002104 W UsageFault_Handler
00002104 W USB0_IRQHandler
00002104 W USBDCD0_IRQHandler
00002104 W WDOG_IRQHandler
00002124 W HardFault_Handler
0000213c T _HardFault_Handler
0000230c W USBDM::_usbdm_assert(char const*)
00002324 W USBDM::PitInfo::enableClock()
0000234c W USBDM::operator+(USBDM::PitChannelNum, unsigned int)
00002366 W USBDM::operator+(USBDM::PitChannelNum, int)
00002384 T initializePIT()
00002398 T SpeedAdvance(unsigned int)
00002480 W USBDM::PitBase_T<USBDM::PitInfo>::configure(USBDM::PitDebugMode)
000024c8 W USBDM::PitBase_T<USBDM::PitInfo>::enable()
000024d8 W USBDM::PitBase_T<USBDM::PitInfo>::disableChannel(USBDM::PitChannelNum)
00002508 W USBDM::PitBase_T<USBDM::PitInfo>::delay(USBDM::PitChannelNum, float)
00002550 W USBDM::PitBase_T<USBDM::PitInfo>::configureChannel(USBDM::PitChannelNum, float, USBDM::PitChannelIrq)
0000257c W USBDM::PitBase_T<USBDM::PitInfo>::configureChannelInTicks(USBDM::PitChannelNum, unsigned long, USBDM::PitChannelIrq)
000025f0 W USBDM::PitBase_T<USBDM::PitInfo>::convertSecondsToTicks(float)
00002710 T USBDM::waitUS(unsigned long)
00002760 T USBDM::waitMS(unsigned long)
000027b0 W USBDM::I2c::startTransaction(int)
000027c6 W USBDM::I2c::endTransaction()
000027da W USBDM::I2c::waitWhileBusy()
00002820 T USBDM::I2c::getBPSValue(unsigned long, unsigned long)
000028d4 T USBDM::I2c::sendAddress(unsigned char)
00002936 T USBDM::I2c::poll()
00002b5e T USBDM::I2c::transmit(unsigned char, unsigned short, unsigned char const*)
00002bae T USBDM::I2c::txRx(unsigned char, unsigned short, unsigned char const*, unsigned short, unsigned char*)
00002c04 T USBDM::I2c::txRx(unsigned char, unsigned short, unsigned short, unsigned char*)
00002ca4 W USBDM::I2c0Info::getInputClockFrequency()
00002cb8 W USBDM::I2c0Info::enableClock()
00002ce0 W USBDM::I2c0Info::initPCRs(unsigned long)
00002d0c W USBDM::FormattedIO::write(long, USBDM::Radix)
00002d66 W USBDM::FormattedIO::write(int, USBDM::Radix)
00002d8c W USBDM::I2c::I2c(I2C_Type volatile*, USBDM::I2cMode)
00002d8c W USBDM::I2c::I2c(I2C_Type volatile*, USBDM::I2cMode)
00002de8 W USBDM::I2c::~I2c()
00002de8 W USBDM::I2c::~I2c()
00002e08 W USBDM::I2c::setBPS(unsigned long, unsigned long)
00002e2c W USBDM::MMA845x::cr1Value(USBDM::MMA845x::AccelDataRate, USBDM::MMA845x::AccelSleepDataRate, bool, bool, bool)
00002e90 T randomWalk()
00002ef4 T scores(unsigned int)
00002f70 T report(USBDM::MMA845x&)
00003010 T main
00003184 W USBDM::I2cBase_T<USBDM::I2c0Info>::I2cBase_T(unsigned int, USBDM::I2cMode, unsigned char)
00003184 W USBDM::I2cBase_T<USBDM::I2c0Info>::I2cBase_T(unsigned int, USBDM::I2cMode, unsigned char)
000031dc W USBDM::I2cBase_T<USBDM::I2c0Info>::busHangReset()
00003248 W USBDM::I2cBase_T<USBDM::I2c0Info>::init(unsigned char)
000032b8 W USBDM::I2cBase_T<USBDM::I2c0Info>::setBPS(unsigned long)
000032dc W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::setOutput(unsigned long)
00003304 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 1u, (USBDM::Polarity)1>::setInput(unsigned long)
00003328 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::high()
0000333a W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 1u, (USBDM::Polarity)1>::read()
00003348 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::low()
0000335a W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::setInactive()
00003366 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::setOut()
0000337c W USBDM::Pcr_T<1024ul, 1074044928ul, (IRQn_Type)41, 0, 256ul>::setPCR(unsigned long)
0000339e W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 1u, (USBDM::Polarity)1>::setIn()
000033b4 W USBDM::Pcr_T<1024ul, 1074044928ul, (IRQn_Type)41, 1, 256ul>::setPCR(unsigned long)
000033d8 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::gpio()
000033ec W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 1u, (USBDM::Polarity)1>::isHigh()
0000340a W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 0u, (USBDM::Polarity)0>::set()
0000341c W USBDM::Pcr_T<1024ul, 1074044928ul, (IRQn_Type)41, 0, 256ul>::pcrReg()
00003430 W USBDM::GpioBase_T<1024ul, 1074044928ul, (IRQn_Type)41, 1074786368ul, 1u, (USBDM::Polarity)1>::gpio()
00003444 W USBDM::Pcr_T<1024ul, 1074044928ul, (IRQn_Type)41, 1, 256ul>::pcrReg()
000034c0 W USBDM::I2cBase_T<USBDM::I2c0Info>::~I2cBase_T()
000034c0 W USBDM::I2cBase_T<USBDM::I2c0Info>::~I2cBase_T()
000034e4 W USBDM::I2cBase_T<USBDM::I2c0Info>::~I2cBase_T()
00003514 T SetOutput()
00003540 T WritePin(unsigned int)
000035f8 T USBDM::MMA845x::MMA845x(USBDM::I2c&, USBDM::MMA845x::AccelerometerMode, unsigned char)
000035f8 T USBDM::MMA845x::MMA845x(USBDM::I2c&, USBDM::MMA845x::AccelerometerMode, unsigned char)
00003650 T USBDM::MMA845x::readReg(unsigned char)
00003680 T USBDM::MMA845x::writeReg(unsigned char, unsigned char)
000036b0 T USBDM::MMA845x::reset()
000036d2 T USBDM::MMA845x::readAccelerometerXYZ(int&, short&, short&, short&)
0000376a T USBDM::MMA845x::configure(USBDM::MMA845x::AccelerometerMode, unsigned char)
000037a4 T USBDM::MMA845x::readID()
000037d0 T USBDM::MMA845x::calibrateAccelerometer()
00003964 T USBDM::getErrorMessage(USBDM::ErrorCode)
00003990 T USBDM::checkError()
000039e0 T cpp_initialise
000039ec T __aeabi_atexit
000039f6 T operator delete(void*, unsigned int)
000039fa T operator delete(void*)
00003a00 T rintf
00003aa8 T __cxa_atexit
00003ac4 T exit
00003aec T __libc_init_array
00003b34 T malloc
00003b44 T free
00003b54 T memset
00003b64 T _free_r
00003c00 T _malloc_r
00003cb4 T rand
00003d1c T _sbrk_r
00003d3c T __malloc_lock
00003d48 T __malloc_unlock
00003d54 T __retarget_lock_acquire_recursive
00003d56 T __retarget_lock_release_recursive
000042e4 V vtable for USBDM::Uart_brfa_T<USBDM::Uart0Info>
00004310 V vtable for USBDM::Uart_T<USBDM::Uart0Info>
0000433c V vtable for USBDM::Uart
00004368 V vtable for USBDM::FormattedIO
0000438c T USBDM::Mcg::clockInfo
00004408 T USBDM::I2c::I2C_DIVISORS
00004488 T vtable for USBDM::I2c
000044a0 V vtable for USBDM::I2cBase_T<USBDM::I2c0Info>
000044e8 T _global_impure_ptr
000044ec T _init
000044f8 T _fini
00004504 T __CTOR_END__
00004504 T __CTOR_LIST__
00004504 T __DTOR_END__
00004504 T __DTOR_LIST__
00004524 T __exidx_start
0000452c R __DATA_ROM
0000452c R __etext
0000452c R __exidx_end
000045e0 A __DATA_END
1fffe000 D __DATA_RAM
1fffe000 D __data_start__
1fffe000 D __dso_handle
1fffe000 ? __interrupts_ram_end__
1fffe000 ? __interrupts_ram_start__
1fffe000 ? __VECTOR_RAM__
1fffe000 ? _mtb_end
1fffe000 ? _mtb_start
1fffe004 V SystemCoreClock
1fffe008 V SystemBusClock
1fffe00c V USBDM::PitBase_T<USBDM::PitInfo>::allocatedChannels
1fffe050 D _impure_ptr
1fffe0b4 B __bss_start__
1fffe0b4 D __data_end__
1fffe0b4 B __START_BSS
1fffe0d0 B USBDM::console
1fffe0e8 B USBDM::SystemMcgffClock
1fffe0ec B USBDM::SystemMcgOutClock
1fffe0f0 B USBDM::SystemMcgFllClock
1fffe0f4 B USBDM::SystemMcgPllClock
1fffe0f8 B USBDM::SystemLpoClock
1fffe0fc B USBDM::Mcg::currentClockMode
1fffe104 B i2c0
1fffe128 B accelerometer
1fffe134 V USBDM::I2cBase_T<USBDM::I2c0Info>::thisPtr
1fffe138 B i2c
1fffe15c B USBDM::errorCode
1fffe160 B __malloc_free_list
1fffe164 B __malloc_sbrk_start
1fffe168 B errno
1fffe16c B __lock___atexit_recursive_mutex
1fffe16d B __lock___arc4random_mutex
1fffe16e B __lock___env_recursive_mutex
1fffe16f B __lock___sinit_recursive_mutex
1fffe170 B __lock___malloc_recursive_mutex
1fffe171 B __lock___at_quick_exit_mutex
1fffe172 B __lock___dd_hash_mutex
1fffe173 B __lock___tz_mutex
1fffe174 B __lock___sfp_recursive_mutex
1fffe178 B __bss_end__
1fffe178 B __END_BSS
1fffe178 B __heap_addr
1fffe178 B __HeapBase
1fffffff A __HeapLimit
20001000 B __StackLimit
20002000 B __stack
20002000 B __StackTop
